[{"D:\\Web\\digiClass\\client\\src\\index.js":"1","D:\\Web\\digiClass\\client\\src\\App.js":"2","D:\\Web\\digiClass\\client\\src\\reducer\\index.js":"3","D:\\Web\\digiClass\\client\\src\\reducer\\user.js":"4","D:\\Web\\digiClass\\client\\src\\pages\\home.js":"5","D:\\Web\\digiClass\\client\\src\\pages\\registration.js":"6","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js":"7","D:\\Web\\digiClass\\client\\src\\constants\\index.js":"8","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js":"9","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js":"10","D:\\Web\\digiClass\\client\\src\\actions\\index.js":"11","D:\\Web\\digiClass\\client\\src\\api\\index.js":"12"},{"size":604,"mtime":1612332665938,"results":"13","hashOfConfig":"14"},{"size":459,"mtime":1612415377030,"results":"15","hashOfConfig":"14"},{"size":117,"mtime":1612333013523,"results":"16","hashOfConfig":"14"},{"size":223,"mtime":1612782685326,"results":"17","hashOfConfig":"14"},{"size":114,"mtime":1612334480318,"results":"18","hashOfConfig":"14"},{"size":2108,"mtime":1612755591315,"results":"19","hashOfConfig":"14"},{"size":10892,"mtime":1612688277853,"results":"20","hashOfConfig":"14"},{"size":899,"mtime":1612781877921,"results":"21","hashOfConfig":"14"},{"size":8108,"mtime":1612784489419,"results":"22","hashOfConfig":"14"},{"size":8077,"mtime":1612757978063,"results":"23","hashOfConfig":"14"},{"size":325,"mtime":1612791777871,"results":"24","hashOfConfig":"14"},{"size":136,"mtime":1612791454683,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"szblh4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web\\digiClass\\client\\src\\index.js",["58","59"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n",["60","61"],"D:\\Web\\digiClass\\client\\src\\App.js",["62"],"import React from \"react\";\r\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\r\nimport Register from \"./pages/registration\";\r\nimport home from \"./pages/home\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <main>\r\n          <Route path=\"/\" component={home} exact />\r\n          <Route path=\"/register\" component={Register} exact />\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Web\\digiClass\\client\\src\\reducer\\index.js",[],"D:\\Web\\digiClass\\client\\src\\reducer\\user.js",["63"],"import { ADD_STUDENT } from \"./../constants\";\r\n\r\nexport default (user = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_STUDENT:\r\n      return [...user, action.payload];\r\n    default:\r\n      return user;\r\n  }\r\n};\r\n","D:\\Web\\digiClass\\client\\src\\pages\\home.js",["64"],"import React, { useState } from \"react\";\r\n\r\nexport default function home() {\r\n  return <h1>Hallow World</h1>;\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\pages\\registration.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\admin.js",["65"],"import React from \"react\";\r\nimport { Button, TextField, Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n  COLLEGE,\r\n  PRIMARY_SCHOOL,\r\n  SECONDARY_SCHOOL,\r\n  UNIVERSITY,\r\n  YEAR,\r\n  SEMESTER,\r\n  CLASS,\r\n  BRANCH,\r\n  SECTION,\r\n  DIRECTOR,\r\n  PRINCIPLE,\r\n} from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function AdminForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"name\",\r\n    instituteName: \"abc School\",\r\n    description: \"\",\r\n    instituteType: SECONDARY_SCHOOL,\r\n    choiceYear: CLASS,\r\n    yearQuantity: 3,\r\n    image: \"\",\r\n    choiceBranch: SECTION,\r\n    branchQuantity: 1,\r\n    designation: PRINCIPLE,\r\n    profileLink: \"\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [anchorElYear, setAnchorElYear] = React.useState(null);\r\n  const [anchorElBranch, setAnchorElBranch] = React.useState(null);\r\n\r\n  const handleMenuItemClick = (event, type) => {\r\n    setUserData({ ...userData, instituteType: type });\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuItemYearClick = (event, type) => {\r\n    setUserData({ ...userData, choiceYear: type });\r\n    setAnchorElYear(null);\r\n  };\r\n\r\n  const handleMenuItemBranchClick = (event, type) => {\r\n    setUserData({ ...userData, choiceBranch: type });\r\n    setAnchorElBranch(null);\r\n  };\r\n\r\n  const toggleDesignation = () => {\r\n    if (userData.designation === PRINCIPLE)\r\n      setUserData({ ...userData, designation: DIRECTOR });\r\n    else setUserData({ ...userData, designation: PRINCIPLE });\r\n  };\r\n\r\n  function handleSubmit() {}\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\" style={{ paddingBottom: \"60px\" }}>\r\n          <div\r\n            style={{\r\n              width: \"15%\",\r\n              alignContent: \"center\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"14px\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => toggleDesignation()}\r\n              style={{ fontSize: \"18px\" }}\r\n            >\r\n              <u>{userData.designation}</u>\r\n            </Button>\r\n          </div>\r\n          <div style={{ width: \"83%\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"name\"\r\n              fullWidth\r\n              label=\"Full Name\"\r\n              value={userData.name}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, name: e.target.value });\r\n              }}\r\n              helperText=\"At least four characters.\"\r\n              error={userData.name.trim().length > 3 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"profileLink\"\r\n            fullWidth\r\n            label=\"Profile Link(Optional)\"\r\n            value={userData.profileLink}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, profileLink: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"description\"\r\n            fullWidth\r\n            label=\"Description(Optional)\"\r\n            value={userData.description}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, description: e.target.value });\r\n            }}\r\n            style={{ marginTop: \"8px\" }}\r\n            multiline\r\n            rows={4}\r\n          />\r\n        </div>\r\n        <TextField\r\n          variant=\"standard\"\r\n          name=\"instituteName\"\r\n          fullWidth\r\n          label=\"Institute Name\"\r\n          value={userData.instituteName}\r\n          onChange={(e) => {\r\n            setUserData({ ...userData, instituteName: e.target.value });\r\n          }}\r\n          helperText=\"At least five characters.\"\r\n          error={userData.instituteName.trim().length > 5 ? false : true}\r\n          style={{ marginTop: \"8px\" }}\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"left\",\r\n            alignItems: \"center\",\r\n            marginTop: \"60px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            Institute Type:\r\n          </div>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n          >\r\n            <u>{userData.instituteType.replace(\"_\", \" \")}</u>\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={(event) => setAnchorEl(null)}\r\n          >\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, PRIMARY_SCHOOL)}\r\n            >\r\n              Primary School\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, SECONDARY_SCHOOL)}\r\n            >\r\n              Secondary School\r\n            </MenuItem>\r\n            <MenuItem onClick={(event) => handleMenuItemClick(event, COLLEGE)}>\r\n              College\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={(event) => handleMenuItemClick(event, UNIVERSITY)}\r\n            >\r\n              University\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            justifyContent: \"left\",\r\n            display: \"flex\",\r\n            paddingTop: \"60px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"600\",\r\n              verticalAlign: \"middle\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            Add Profile Picture\r\n          </div>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setUserData({ ...userData, images: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"8px\",\r\n          }}\r\n          className=\"row\"\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElYear(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceYear}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElYear}\r\n                keepMounted\r\n                open={Boolean(anchorElYear)}\r\n                onClose={(event) => setAnchorElYear(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, YEAR)}\r\n                >\r\n                  Year\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, SEMESTER)}\r\n                >\r\n                  Semester\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemYearClick(event, CLASS)}\r\n                >\r\n                  Class\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 1 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              marginTop: \"60px\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(event) => setAnchorElBranch(event.currentTarget)}\r\n              >\r\n                <u>{userData.choiceBranch}</u>\r\n              </Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorElBranch}\r\n                keepMounted\r\n                open={Boolean(anchorElBranch)}\r\n                onClose={(event) => setAnchorElBranch(null)}\r\n              >\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, BRANCH)}\r\n                >\r\n                  Branch\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={(event) => handleMenuItemBranchClick(event, SECTION)}\r\n                >\r\n                  Section\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n            <div style={{ width: \"60px\" }}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                name=\"yearValue\"\r\n                fullWidth\r\n                error={userData.yearQuantity > 0 ? false : true}\r\n                value={userData.yearQuantity}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, yearQuantity: e.target.value });\r\n                }}\r\n                style={{ fontSize: \"10px\" }}\r\n                type=\"number\"\r\n                inputProps={{\r\n                  style: {\r\n                    padding: 3,\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\constants\\index.js",[],"D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\student.js",["66"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { STUDENT, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addStudent } from \"./../../actions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function StudentForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: STUDENT,\r\n    rollNo: \"\",\r\n    email: \"\",\r\n    class: 1,\r\n    section: \"A\",\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    dob: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addStudent(userData));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"rollNo\"\r\n              fullWidth\r\n              label=\"Roll no.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, rollNo: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Class/Semester/Year\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, class: e.target.value });\r\n                }}\r\n                error={userData.class > 0 ? false : true}\r\n                type=\"number\"\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Section/Branch\"\r\n                value={userData.section}\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, section: e.target.value });\r\n                }}\r\n                error={userData.section.trim().length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\components\\registrationForm\\teacher.js",["67"],"import React from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { TEACHER, MALE, FEMALE } from \"./../../constants\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  textField: {},\r\n}));\r\n\r\nexport default function TeacherForm() {\r\n  const [userData, setUserData] = React.useState({\r\n    name: \"\",\r\n    instituteID: \"\",\r\n    rank: TEACHER,\r\n    teacherID: \"\",\r\n    email: \"\",\r\n    classes: [],\r\n    sections: [],\r\n    gender: MALE,\r\n    profileLink: \"\",\r\n    images: \"\",\r\n    driveLink: \"\",\r\n    DOB: \"01-01-2001\",\r\n  });\r\n\r\n  const toggleGender = () => {\r\n    if (userData.gender === MALE) setUserData({ ...userData, gender: FEMALE });\r\n    else setUserData({ ...userData, gender: MALE });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\r\n\r\n  const handleSubmit = () => {};\r\n\r\n  return (\r\n    <div style={{ width: \"70%\", paddingBottom: \"100px\" }}>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ paddingBottom: \"60px\" }}>\r\n          <TextField\r\n            variant=\"standard\"\r\n            name=\"name\"\r\n            fullWidth\r\n            label=\"Name\"\r\n            value={userData.name}\r\n            onChange={(e) => {\r\n              setUserData({ ...userData, name: e.target.value });\r\n            }}\r\n            // helperText=\"At least four characters.\"\r\n            error={userData.name.trim().length > 3 ? false : true}\r\n            style={{ marginTop: \"8px\" }}\r\n            className={classes.textField}\r\n          />\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"teacherID\"\r\n              fullWidth\r\n              label=\"Teacher ID.\"\r\n              value={userData.teacherID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, teacherID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.name.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"instituteID\"\r\n              fullWidth\r\n              label=\"Institute ID\"\r\n              value={userData.instituteID}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, instituteID: e.target.value });\r\n              }}\r\n              // helperText=\"At least two characters.\"\r\n              error={userData.instituteID.trim().length > 2 ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              value={userData.email}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, email: e.target.value });\r\n              }}\r\n              // helperText=\"Enter proper email address.\"\r\n              error={regExp.test(userData.email.trim()) ? false : true}\r\n              style={{ marginTop: \"8px\" }}\r\n              className={classes.textField}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"class\"\r\n                fullWidth\r\n                label=\"Classes/Semesters/Years\"\r\n                value={userData.class}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    classes: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.classes.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                paddingLeft: \"50px\",\r\n                paddingRight: \"50px\",\r\n              }}\r\n            >\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"section\"\r\n                fullWidth\r\n                label=\"Sections/Branches\"\r\n                value={userData.sections}\r\n                onChange={(e) => {\r\n                  setUserData({\r\n                    ...userData,\r\n                    sections: e.target.value.split(\",\"),\r\n                  });\r\n                }}\r\n                error={userData.sections.length > 0 ? false : true}\r\n                style={{ marginTop: \"8px\" }}\r\n                className={classes.textField}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"60px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            className=\"row\"\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"10px\",\r\n                paddingLeft: \"20px\",\r\n                marginTop: \"10px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              Gender:\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={() => toggleGender()}\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                <u>{userData.gender}</u>\r\n              </Button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                paddingRight: \"20px\",\r\n                paddingLeft: \"100px\",\r\n                marginTop: \"15px\",\r\n                display: \"flex\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              DOB:\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                variant=\"standard\"\r\n                name=\"dob\"\r\n                fullWidth\r\n                value={userData.dob}\r\n                type=\"date\"\r\n                onChange={(e) => {\r\n                  setUserData({ ...userData, dob: e.target.value });\r\n                }}\r\n                style={{ marginTop: \"8px\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingTop: \"60px\" }}>\r\n            <TextField\r\n              variant=\"standard\"\r\n              name=\"profileLink\"\r\n              fullWidth\r\n              label=\"Profile Link(Optional)\"\r\n              value={userData.profileLink}\r\n              onChange={(e) => {\r\n                setUserData({ ...userData, profileLink: e.target.value });\r\n              }}\r\n              style={{ marginTop: \"8px\" }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              paddingTop: \"10px\",\r\n              justifyContent: \"left\",\r\n              display: \"flex\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontWeight: \"600\",\r\n                verticalAlign: \"middle\",\r\n                paddingRight: \"10px\",\r\n              }}\r\n            >\r\n              Add Profile Picture\r\n            </div>\r\n            <FileBase\r\n              type=\"file\"\r\n              multiple={false}\r\n              onDone={({ base64 }) =>\r\n                setUserData({ ...userData, images: base64 })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Web\\digiClass\\client\\src\\actions\\index.js",[],"D:\\Web\\digiClass\\client\\src\\api\\index.js",[],{"ruleId":"68","severity":1,"message":"69","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":9},{"ruleId":"68","severity":1,"message":"72","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":14},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"68","severity":1,"message":"77","line":2,"column":25,"nodeType":"70","messageId":"71","endLine":2,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":10,"endColumn":3},{"ruleId":"68","severity":1,"message":"81","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":206,"column":13,"nodeType":"84","messageId":"85","endLine":206,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":238,"column":15,"nodeType":"84","messageId":"85","endLine":238,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":237,"column":15,"nodeType":"84","messageId":"85","endLine":237,"endColumn":25},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'paddingTop'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]